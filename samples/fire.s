;
; File generated by cc65 v 2.17 - Git 19925800
;
	.fopt		compiler,"cc65 v 2.17 - Git 19925800"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "fire.c", 6921, 1554126600
	.dbg		file, "/opt/cc-6502/share/cc65/include/stdlib.h", 5748, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/string.h", 5104, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/stddef.h", 3057, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/time.h", 5941, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/conio.h", 8941, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/stdarg.h", 2913, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/target.h", 3126, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/cbm.h", 11354, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/c64.h", 6969, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/_vic2.h", 10835, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/_sid.h", 3626, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/_6526.h", 3962, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/cbm_filetype.h", 4949, 1554133537
	.forceimport	__STARTUP__
	.dbg		sym, "clock", "00", extern, "_clock"
	.dbg		sym, "clrscr", "00", extern, "_clrscr"
	.dbg		sym, "kbhit", "00", extern, "_kbhit"
	.dbg		sym, "gotoxy", "00", extern, "_gotoxy"
	.dbg		sym, "cputc", "00", extern, "_cputc"
	.dbg		sym, "cputsxy", "00", extern, "_cputsxy"
	.dbg		sym, "cprintf", "00", extern, "_cprintf"
	.dbg		sym, "cgetc", "00", extern, "_cgetc"
	.dbg		sym, "textcolor", "00", extern, "_textcolor"
	.dbg		sym, "bgcolor", "00", extern, "_bgcolor"
	.dbg		sym, "bordercolor", "00", extern, "_bordercolor"
	.import		_clock
	.import		_clrscr
	.import		_kbhit
	.import		_gotoxy
	.import		_cputc
	.import		_cputsxy
	.import		_cprintf
	.import		_cgetc
	.import		_textcolor
	.import		_bgcolor
	.import		_bordercolor
	.export		_main

.segment	"RODATA"

L015D:
	.byte	$D0,$52,$45,$53,$53,$20,$41,$4E,$59,$20,$4B,$45,$59,$20,$57,$48
	.byte	$45,$4E,$20,$44,$4F,$4E,$45,$2E,$2E,$2E,$00
L00C2:
	.byte	$CD,$41,$4B,$49,$4E,$47,$20,$43,$48,$41,$52,$53,$45,$54,$2C,$20
	.byte	$4D,$4F,$4D,$50,$4C,$53,$00
L0147:
	.byte	$54,$49,$4D,$45,$20,$20,$3A,$20,$25,$4C,$55,$2E,$25,$55,$53,$00
L0156:
	.byte	$46,$50,$53,$20,$20,$20,$3A,$20,$25,$4C,$55,$2E,$25,$55,$00
L014F:
	.byte	$46,$52,$41,$4D,$45,$53,$3A,$20,$25,$4C,$55,$00

; ---------------------------------------------------------------
; void __near__ makechar (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_makechar: near

	.dbg	func, "makechar", "00", static, "_makechar"
	.dbg	sym, "font", "00", register, "regbank", 4
	.dbg	sym, "i", "00", register, "regbank", 3
	.dbg	sym, "ii", "00", register, "regbank", 2
	.dbg	sym, "b", "00", register, "regbank", 1
	.dbg	sym, "bc", "00", register, "regbank", 0

.segment	"RODATA"

L000B:
	.byte	$01
	.byte	$02
	.byte	$04
	.byte	$08
	.byte	$10
	.byte	$20
	.byte	$40
	.byte	$80

.segment	"BSS"

L0014:
	.res	1,$00

.segment	"CODE"

;
; register char *font;
;
	.dbg	line, "fire.c", 76
	lda     regbank+4
	ldx     regbank+5
	jsr     pushax
;
; register unsigned char i, ii, b, bc;
;
	.dbg	line, "fire.c", 77
	lda     regbank+3
	jsr     pusha
	lda     regbank+2
	jsr     pusha
	lda     regbank+1
	jsr     pusha
	lda     regbank+0
	jsr     pusha
;
; gotoxy (0, 1);
;
	.dbg	line, "fire.c", 80
	lda     #$00
	jsr     pusha
	lda     #$01
	jsr     _gotoxy
;
; for (font = (char*)CHARSET; font != (char*)(CHARSET+(1*8)); ++font) {
;
	.dbg	line, "fire.c", 82
	ldx     #$E8
	lda     #$00
	sta     regbank+4
	stx     regbank+4+1
L0018:	lda     regbank+4+1
	cmp     #$E8
	bne     L016A
	lda     regbank+4
	cmp     #$08
	beq     L0019
;
; *font = 0x00;
;
	.dbg	line, "fire.c", 83
L016A:	lda     #$00
	tay
	sta     (regbank+4),y
;
; for (font = (char*)CHARSET; font != (char*)(CHARSET+(1*8)); ++font) {
;
	.dbg	line, "fire.c", 82
	inc     regbank+4
	bne     L0018
	inc     regbank+4+1
	jmp     L0018
;
; for (font = (char*)(CHARSET+(64*8)); font != (char*)(CHARSET+(256*8)); ++font) {
;
	.dbg	line, "fire.c", 85
L0019:	ldx     #$EA
	lda     #$00
	sta     regbank+4
	stx     regbank+4+1
L0026:	lda     regbank+4+1
	cmp     #$F0
	bne     L016B
	lda     regbank+4
	beq     L0027
;
; *font = 0xff;
;
	.dbg	line, "fire.c", 86
L016B:	lda     #$FF
	ldy     #$00
	sta     (regbank+4),y
;
; for (font = (char*)(CHARSET+(64*8)); font != (char*)(CHARSET+(256*8)); ++font) {
;
	.dbg	line, "fire.c", 85
	inc     regbank+4
	bne     L0026
	inc     regbank+4+1
	jmp     L0026
;
; for (c = 0; c < 0x40; ++c) {
;
	.dbg	line, "fire.c", 90
L0027:	sta     L0014
L0163:	lda     L0014
	cmp     #$40
	jcs     L0037
;
; bc = 0;
;
	.dbg	line, "fire.c", 91
	lda     #$00
	sta     regbank+0
;
; for (i = 0; i < 8; i++){
;
	.dbg	line, "fire.c", 92
	sta     regbank+3
L0164:	lda     regbank+3
	cmp     #$08
	bcs     L0168
;
; b = 0;
;
	.dbg	line, "fire.c", 93
	lda     #$00
	sta     regbank+1
;
; for (ii = 0; ii < 8; ii++) {
;
	.dbg	line, "fire.c", 94
	sta     regbank+2
	tax
L0165:	lda     regbank+2
	cmp     #$08
	bcs     L0167
;
; bc += c;
;
	.dbg	line, "fire.c", 95
	lda     L0014
	clc
	adc     regbank+0
	sta     regbank+0
;
; if (bc > 0x3f) {
;
	.dbg	line, "fire.c", 96
	cmp     #$40
	bcc     L0166
;
; bc = bc - 0x40;
;
	.dbg	line, "fire.c", 97
	lda     regbank+0
	sec
	sbc     #$40
	sta     regbank+0
;
; b += bittab[(ii + (i & 1)) & 0x7];
;
	.dbg	line, "fire.c", 98
	stx     ptr1+1
	lda     regbank+3
	and     #$01
	clc
	adc     regbank+2
	pha
	txa
	adc     ptr1+1
	pla
	and     #$07
	sta     ptr1
	lda     #$00
	clc
	adc     #>(L000B)
	sta     ptr1+1
	ldy     #<(L000B)
	lda     (ptr1),y
	clc
	adc     regbank+1
	sta     regbank+1
;
; for (ii = 0; ii < 8; ii++) {
;
	.dbg	line, "fire.c", 94
	ldx     #$00
L0166:	inc     regbank+2
	jmp     L0165
;
; ((unsigned char*)CHARSET + (1 * 8)) [(c * 8) + i] = b;
;
	.dbg	line, "fire.c", 101
L0167:	lda     L0014
	stx     tmp1
	asl     a
	rol     tmp1
	asl     a
	rol     tmp1
	asl     a
	rol     tmp1
	ldx     tmp1
	clc
	adc     regbank+3
	bcc     L0162
	inx
	clc
L0162:	adc     #$08
	sta     ptr1
	txa
	adc     #$E8
	sta     ptr1+1
	lda     regbank+1
	ldy     #$00
	sta     (ptr1),y
;
; for (i = 0; i < 8; i++){
;
	.dbg	line, "fire.c", 92
	inc     regbank+3
	jmp     L0164
;
; if ((c & 0x07) == 0) {
;
	.dbg	line, "fire.c", 103
L0168:	lda     L0014
	and     #$07
	bne     L0169
;
; cputc ('.');
;
	.dbg	line, "fire.c", 104
	lda     #$2E
	jsr     _cputc
;
; for (c = 0; c < 0x40; ++c) {
;
	.dbg	line, "fire.c", 90
L0169:	inc     L0014
	jmp     L0163
;
; }
;
	.dbg	line, "fire.c", 107
L0037:	ldy     #$00
L006A:	lda     (sp),y
	sta     regbank+0,y
	iny
	cpy     #$06
	bne     L006A
	jmp     incsp6
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ fire (unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fire: near

	.dbg	func, "fire", "00", static, "_fire"
	.dbg	sym, "screenbase", "00", auto, 0
	.dbg	sym, "screen", "00", register, "regbank", 4
	.dbg	sym, "buffer", "00", register, "regbank", 2
	.dbg	sym, "c", "00", register, "regbank", 1

.segment	"CODE"

;
; {
;
	.dbg	line, "fire.c", 112
	jsr     pushax
;
; register char* screen;
;
	.dbg	line, "fire.c", 113
	lda     regbank+4
	ldx     regbank+5
	jsr     pushax
;
; register char* buffer;
;
	.dbg	line, "fire.c", 114
	lda     regbank+2
	ldx     regbank+3
	jsr     pushax
;
; register char c;
;
	.dbg	line, "fire.c", 115
	lda     regbank+1
	jsr     pusha
;
; screen = (char*) screenbase;
;
	.dbg	line, "fire.c", 117
	ldy     #$06
	lda     (sp),y
	sta     regbank+4+1
	dey
	lda     (sp),y
	sta     regbank+4
;
; buffer = (char*) BUFFER;
;
	.dbg	line, "fire.c", 118
	ldx     #$04
	lda     #$00
	sta     regbank+2
	stx     regbank+2+1
;
; while (buffer != (char*) (BUFFER + (24 * 40))) {
;
	.dbg	line, "fire.c", 120
	jmp     L0072
;
; c = (buffer[40-1] + buffer[40-1] + buffer[40] + buffer[41]) / 4;
;
	.dbg	line, "fire.c", 121
L0070:	ldy     #$27
	lda     (regbank+2),y
	sta     ptr1
	ldx     #$00
	lda     (regbank+2),y
	clc
	adc     ptr1
	bcc     L016C
	inx
L016C:	sta     ptr1
	stx     ptr1+1
	iny
	lda     (regbank+2),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L016D
	inx
L016D:	sta     ptr1
	stx     ptr1+1
	iny
	lda     (regbank+2),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L016E
	inx
L016E:	jsr     shrax2
	sta     regbank+1
;
; if (c > 2) {
;
	.dbg	line, "fire.c", 122
	cmp     #$03
	bcc     L007E
;
; c -= 3;
;
	.dbg	line, "fire.c", 123
	lda     regbank+1
	sec
	sbc     #$03
	sta     regbank+1
;
; *screen = *buffer = c;
;
	.dbg	line, "fire.c", 125
L007E:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+1
	ldy     #$00
	sta     (regbank+2),y
	jsr     staspidx
;
; ++screen;
;
	.dbg	line, "fire.c", 126
	inc     regbank+4
	bne     L0086
	inc     regbank+4+1
;
; ++buffer;
;
	.dbg	line, "fire.c", 127
L0086:	inc     regbank+2
	bne     L0072
	inc     regbank+2+1
;
; while (buffer != (char*) (BUFFER + (24 * 40))) {
;
	.dbg	line, "fire.c", 120
L0072:	lda     regbank+2+1
	cmp     #$07
	bne     L0070
	lda     regbank+2
	cmp     #$C0
	bne     L0070
;
; screen = (char*) (screenbase + (23 * 40));
;
	.dbg	line, "fire.c", 130
	ldy     #$06
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$98
	sta     regbank+4
	txa
	adc     #$03
	sta     regbank+4+1
;
; buffer = (char*) (BUFFER + (23 * 40));
;
	.dbg	line, "fire.c", 131
	ldx     #$07
	lda     #$98
	sta     regbank+2
	stx     regbank+2+1
;
; for(; buffer != (char*)(BUFFER+(25*40)); ++screen, ++buffer) {
;
	.dbg	line, "fire.c", 133
L0091:	lda     regbank+2+1
	cmp     #$07
	bne     L016F
	lda     regbank+2
	cmp     #$E8
	beq     L0092
;
; *screen = *buffer = 0x30 + (inb (&SID.noise) >> 4);
;
	.dbg	line, "fire.c", 134
L016F:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     $D41B
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     #$30
	ldy     #$00
	sta     (regbank+2),y
	jsr     staspidx
;
; for(; buffer != (char*)(BUFFER+(25*40)); ++screen, ++buffer) {
;
	.dbg	line, "fire.c", 133
	inc     regbank+4
	bne     L009A
	inc     regbank+4+1
L009A:	inc     regbank+2
	bne     L0091
	inc     regbank+2+1
	jmp     L0091
;
; }
;
	.dbg	line, "fire.c", 136
L0092:	ldy     #$00
L00A5:	lda     (sp),y
	sta     regbank+1,y
	iny
	cpy     #$05
	bne     L00A5
	jmp     incsp7
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

	.dbg	func, "main", "00", extern, "_main"

.segment	"BSS"

L00A7:
	.res	1,$00
L00A8:
	.res	1,$00
L00A9:
	.res	1,$00
L00AA:
	.res	1,$00
L00AB:
	.res	4,$00
L00AC:
	.res	4,$00
L00AE:
	.res	4,$00
L00AF:
	.res	2,$00
L00B0:
	.res	4,$00
L00B1:
	.res	2,$00
L00B2:
	.res	2,$00
L00B3:
	.res	1,$00

.segment	"CODE"

;
; unsigned long f = 0;
;
	.dbg	line, "fire.c", 147
	lda     #$00
	sta     L00AC
	sta     L00AC+1
	sta     L00AC+2
	sta     L00AC+3
;
; outb (&SID.v3.freq, 0xffff);
;
	.dbg	line, "fire.c", 164
	lda     #$FF
	sta     $D40E
	sta     $D40E+1
;
; outb (&SID.v3.ctrl, 0x80);
;
	.dbg	line, "fire.c", 165
	lda     #$80
	sta     $D412
;
; clrscr ();
;
	.dbg	line, "fire.c", 167
	jsr     _clrscr
;
; cprintf ("Making charset, mompls");
;
	.dbg	line, "fire.c", 168
	lda     #<(L00C2)
	ldx     #>(L00C2)
	jsr     pushax
	ldy     #$02
	jsr     _cprintf
;
; makechar ();
;
	.dbg	line, "fire.c", 169
	jsr     _makechar
;
; border     = bordercolor (COLOR_BLACK);
;
	.dbg	line, "fire.c", 172
	lda     #$00
	jsr     _bordercolor
	sta     L00A7
;
; background = bgcolor (COLOR_BLACK);
;
	.dbg	line, "fire.c", 173
	lda     #$00
	jsr     _bgcolor
	sta     L00A8
;
; text       = textcolor (COLOR_BLACK);
;
	.dbg	line, "fire.c", 174
	lda     #$00
	jsr     _textcolor
	sta     L00A9
;
; clrscr ();
;
	.dbg	line, "fire.c", 175
	jsr     _clrscr
;
; for(i = 0; i != 0x400; i++) {
;
	.dbg	line, "fire.c", 177
	lda     #$00
	sta     L00B2
	sta     L00B2+1
L00CF:	lda     L00B2+1
	cmp     #$04
	bne     L0170
	lda     L00B2
	beq     L00D0
;
; *((char *)(i + BUFFER))  = 0;
;
	.dbg	line, "fire.c", 178
L0170:	lda     L00B2
	sta     ptr1
	lda     L00B2+1
	clc
	adc     #$04
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
;
; *((char *)(i + SCREEN1)) = 0;
;
	.dbg	line, "fire.c", 179
	lda     L00B2
	sta     ptr1
	lda     L00B2+1
	clc
	adc     #$E0
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; *((char *)(i + SCREEN2)) = 0;
;
	.dbg	line, "fire.c", 180
	lda     L00B2
	sta     ptr1
	lda     L00B2+1
	clc
	adc     #$E4
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; outb ((char*)(i + COLORRAM), COLOR_YELLOW);
;
	.dbg	line, "fire.c", 181
	lda     L00B2
	sta     ptr1
	lda     L00B2+1
	clc
	adc     #$D8
	sta     ptr1+1
	lda     #$07
	sta     (ptr1),y
;
; for(i = 0; i != 0x400; i++) {
;
	.dbg	line, "fire.c", 177
	lda     L00B2
	ldx     L00B2+1
	clc
	adc     #$01
	bcc     L00D8
	inx
L00D8:	sta     L00B2
	stx     L00B2+1
	jmp     L00CF
;
; block = inb (&CIA2.pra);
;
	.dbg	line, "fire.c", 186
L00D0:	lda     $DD00
	sta     L00B3
;
; outb (&CIA2.pra, (block & 0xFC) | ((SCREEN1 >> 14) ^ 0x03));
;
	.dbg	line, "fire.c", 187
	and     #$FC
	sta     $DD00
;
; v = inb (&VIC.addr);
;
	.dbg	line, "fire.c", 200
	lda     $D018
	sta     L00AA
;
; t = clock ();
;
	.dbg	line, "fire.c", 203
	jsr     _clock
	sta     L00AB
	stx     L00AB+1
	ldy     sreg
	sty     L00AB+2
	ldy     sreg+1
	sty     L00AB+3
;
; while (!kbhit()) {
;
	.dbg	line, "fire.c", 204
	jmp     L0102
;
; fire (SCREEN1);
;
	.dbg	line, "fire.c", 206
L0100:	ldx     #$E0
	jsr     _fire
;
; outb (&VIC.addr, PAGE1);
;
	.dbg	line, "fire.c", 208
	lda     #$8A
	sta     $D018
;
; fire (SCREEN2);
;
	.dbg	line, "fire.c", 211
	ldx     #$E4
	lda     #$00
	jsr     _fire
;
; outb (&VIC.addr, PAGE2);
;
	.dbg	line, "fire.c", 213
	lda     #$9A
	sta     $D018
;
; f += 2;
;
	.dbg	line, "fire.c", 216
	ldy     #<(L00AC)
	sty     ptr1
	ldy     #>(L00AC)
	lda     #$02
	jsr     laddeqa
;
; while (!kbhit()) {
;
	.dbg	line, "fire.c", 204
L0102:	jsr     _kbhit
	tax
	beq     L0100
;
; t = clock() - t;
;
	.dbg	line, "fire.c", 218
	jsr     _clock
	jsr     pusheax
	lda     L00AB+3
	sta     sreg+1
	lda     L00AB+2
	sta     sreg
	ldx     L00AB+1
	lda     L00AB
	jsr     tossubeax
	sta     L00AB
	stx     L00AB+1
	ldy     sreg
	sty     L00AB+2
	ldy     sreg+1
	sty     L00AB+3
;
; outb (&VIC.addr, v);
;
	.dbg	line, "fire.c", 221
	lda     L00AA
	sta     $D018
;
; outb (&CIA2.pra, block);
;
	.dbg	line, "fire.c", 225
	lda     L00B3
	sta     $DD00
;
; (void) cgetc();
;
	.dbg	line, "fire.c", 234
	jsr     _cgetc
;
; bordercolor (border);
;
	.dbg	line, "fire.c", 237
	lda     L00A7
	jsr     _bordercolor
;
; bgcolor (background);
;
	.dbg	line, "fire.c", 238
	lda     L00A8
	jsr     _bgcolor
;
; textcolor (text);
;
	.dbg	line, "fire.c", 239
	lda     L00A9
	jsr     _textcolor
;
; clrscr ();
;
	.dbg	line, "fire.c", 240
	jsr     _clrscr
;
; sec   = (t * 10) / CLK_TCK;
;
	.dbg	line, "fire.c", 243
	lda     L00AB+3
	sta     sreg+1
	lda     L00AB+2
	sta     sreg
	ldx     L00AB+1
	lda     L00AB
	jsr     pusheax
	ldx     #$00
	lda     #$0A
	jsr     tosumul0ax
	jsr     pusheax
	ldx     #$00
	lda     #$3C
	jsr     tosudiv0ax
	sta     L00AE
	stx     L00AE+1
	ldy     sreg
	sty     L00AE+2
	ldy     sreg+1
	sty     L00AE+3
;
; sec10 = sec % 10;
;
	.dbg	line, "fire.c", 244
	lda     L00AE+3
	sta     sreg+1
	lda     L00AE+2
	sta     sreg
	ldx     L00AE+1
	lda     L00AE
	jsr     pusheax
	ldx     #$00
	lda     #$0A
	jsr     tosumod0ax
	sta     L00AF
	stx     L00AF+1
;
; sec  /= 10;
;
	.dbg	line, "fire.c", 245
	lda     L00AE+3
	sta     sreg+1
	lda     L00AE+2
	sta     sreg
	ldx     L00AE+1
	lda     L00AE
	jsr     pusheax
	ldx     #$00
	lda     #$0A
	jsr     tosudiv0ax
	sta     L00AE
	stx     L00AE+1
	ldy     sreg
	sty     L00AE+2
	ldy     sreg+1
	sty     L00AE+3
;
; fps   = (f * (CLK_TCK * 10)) / t;
;
	.dbg	line, "fire.c", 246
	lda     L00AC+3
	sta     sreg+1
	lda     L00AC+2
	sta     sreg
	ldx     L00AC+1
	lda     L00AC
	jsr     pusheax
	ldx     #$02
	lda     #$58
	jsr     tosumul0ax
	jsr     pusheax
	lda     L00AB+3
	sta     sreg+1
	lda     L00AB+2
	sta     sreg
	ldx     L00AB+1
	lda     L00AB
	jsr     tosudiveax
	sta     L00B0
	stx     L00B0+1
	ldy     sreg
	sty     L00B0+2
	ldy     sreg+1
	sty     L00B0+3
;
; fps10 = fps % 10;
;
	.dbg	line, "fire.c", 247
	lda     L00B0+3
	sta     sreg+1
	lda     L00B0+2
	sta     sreg
	ldx     L00B0+1
	lda     L00B0
	jsr     pusheax
	ldx     #$00
	lda     #$0A
	jsr     tosumod0ax
	sta     L00B1
	stx     L00B1+1
;
; fps  /= 10;
;
	.dbg	line, "fire.c", 248
	lda     L00B0+3
	sta     sreg+1
	lda     L00B0+2
	sta     sreg
	ldx     L00B0+1
	lda     L00B0
	jsr     pusheax
	ldx     #$00
	lda     #$0A
	jsr     tosudiv0ax
	sta     L00B0
	stx     L00B0+1
	ldy     sreg
	sty     L00B0+2
	ldy     sreg+1
	sty     L00B0+3
;
; gotoxy (0, 0); cprintf ("time  : %lu.%us", sec, sec10);
;
	.dbg	line, "fire.c", 251
	lda     #$00
	jsr     pusha
	jsr     _gotoxy
	lda     #<(L0147)
	ldx     #>(L0147)
	jsr     pushax
	lda     L00AE+3
	sta     sreg+1
	lda     L00AE+2
	sta     sreg
	ldx     L00AE+1
	lda     L00AE
	jsr     pusheax
	lda     L00AF
	ldx     L00AF+1
	jsr     pushax
	ldy     #$08
	jsr     _cprintf
;
; gotoxy (0, 1); cprintf ("frames: %lu", f);
;
	.dbg	line, "fire.c", 252
	lda     #$00
	jsr     pusha
	lda     #$01
	jsr     _gotoxy
	lda     #<(L014F)
	ldx     #>(L014F)
	jsr     pushax
	lda     L00AC+3
	sta     sreg+1
	lda     L00AC+2
	sta     sreg
	ldx     L00AC+1
	lda     L00AC
	jsr     pusheax
	ldy     #$06
	jsr     _cprintf
;
; gotoxy (0, 2); cprintf ("fps   : %lu.%u", fps, fps10);
;
	.dbg	line, "fire.c", 253
	lda     #$00
	jsr     pusha
	lda     #$02
	jsr     _gotoxy
	lda     #<(L0156)
	ldx     #>(L0156)
	jsr     pushax
	lda     L00B0+3
	sta     sreg+1
	lda     L00B0+2
	sta     sreg
	ldx     L00B0+1
	lda     L00B0
	jsr     pusheax
	lda     L00B1
	ldx     L00B1+1
	jsr     pushax
	ldy     #$08
	jsr     _cprintf
;
; cputsxy (0, 4, "Press any key when done...");
;
	.dbg	line, "fire.c", 256
	jsr     decsp2
	lda     #$00
	ldy     #$01
	sta     (sp),y
	lda     #$04
	dey
	sta     (sp),y
	lda     #<(L015D)
	ldx     #>(L015D)
	jsr     _cputsxy
;
; (void) cgetc ();
;
	.dbg	line, "fire.c", 257
	jsr     _cgetc
;
; return EXIT_SUCCESS;
;
	.dbg	line, "fire.c", 260
	ldx     #$00
	txa
;
; }
;
	.dbg	line, "fire.c", 261
	rts
	.dbg	line

.endproc

