;
; File generated by cc65 v 2.17 - Git 19925800
;
	.fopt		compiler,"cc65 v 2.17 - Git 19925800"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "plasma.c", 8602, 1554126600
	.dbg		file, "/opt/cc-6502/share/cc65/include/stdlib.h", 5748, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/time.h", 5941, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/conio.h", 8941, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/stdarg.h", 2913, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/target.h", 3126, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/cbm.h", 11354, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/stddef.h", 3057, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/c64.h", 6969, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/_vic2.h", 10835, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/_sid.h", 3626, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/_6526.h", 3962, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/cbm_filetype.h", 4949, 1554133537
	.dbg		file, "/opt/cc-6502/share/cc65/include/cc65.h", 5139, 1554133537
	.forceimport	__STARTUP__
	.dbg		sym, "rand", "00", extern, "_rand"
	.dbg		sym, "clock", "00", extern, "_clock"
	.dbg		sym, "clrscr", "00", extern, "_clrscr"
	.dbg		sym, "kbhit", "00", extern, "_kbhit"
	.dbg		sym, "gotoxy", "00", extern, "_gotoxy"
	.dbg		sym, "cputc", "00", extern, "_cputc"
	.dbg		sym, "cputsxy", "00", extern, "_cputsxy"
	.dbg		sym, "cprintf", "00", extern, "_cprintf"
	.dbg		sym, "cgetc", "00", extern, "_cgetc"
	.dbg		sym, "textcolor", "00", extern, "_textcolor"
	.dbg		sym, "bgcolor", "00", extern, "_bgcolor"
	.dbg		sym, "bordercolor", "00", extern, "_bordercolor"
	.dbg		sym, "doesclrscrafterexit", "00", extern, "_doesclrscrafterexit"
	.import		_rand
	.import		_clock
	.import		_clrscr
	.import		_kbhit
	.import		_gotoxy
	.import		_cputc
	.import		_cputsxy
	.import		_cprintf
	.import		_cgetc
	.import		_textcolor
	.import		_bgcolor
	.import		_bordercolor
	.import		_doesclrscrafterexit
	.export		_main

.segment	"RODATA"

_sinustable:
	.byte	$80
	.byte	$7D
	.byte	$7A
	.byte	$77
	.byte	$74
	.byte	$70
	.byte	$6D
	.byte	$6A
	.byte	$67
	.byte	$64
	.byte	$61
	.byte	$5E
	.byte	$5B
	.byte	$58
	.byte	$55
	.byte	$52
	.byte	$4F
	.byte	$4D
	.byte	$4A
	.byte	$47
	.byte	$44
	.byte	$41
	.byte	$3F
	.byte	$3C
	.byte	$39
	.byte	$37
	.byte	$34
	.byte	$32
	.byte	$2F
	.byte	$2D
	.byte	$2B
	.byte	$28
	.byte	$26
	.byte	$24
	.byte	$22
	.byte	$20
	.byte	$1E
	.byte	$1C
	.byte	$1A
	.byte	$18
	.byte	$16
	.byte	$15
	.byte	$13
	.byte	$11
	.byte	$10
	.byte	$0F
	.byte	$0D
	.byte	$0C
	.byte	$0B
	.byte	$0A
	.byte	$08
	.byte	$07
	.byte	$06
	.byte	$06
	.byte	$05
	.byte	$04
	.byte	$03
	.byte	$03
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$03
	.byte	$03
	.byte	$04
	.byte	$05
	.byte	$06
	.byte	$06
	.byte	$07
	.byte	$08
	.byte	$0A
	.byte	$0B
	.byte	$0C
	.byte	$0D
	.byte	$0F
	.byte	$10
	.byte	$11
	.byte	$13
	.byte	$15
	.byte	$16
	.byte	$18
	.byte	$1A
	.byte	$1C
	.byte	$1E
	.byte	$20
	.byte	$22
	.byte	$24
	.byte	$26
	.byte	$28
	.byte	$2B
	.byte	$2D
	.byte	$2F
	.byte	$32
	.byte	$34
	.byte	$37
	.byte	$39
	.byte	$3C
	.byte	$3F
	.byte	$41
	.byte	$44
	.byte	$47
	.byte	$4A
	.byte	$4D
	.byte	$4F
	.byte	$52
	.byte	$55
	.byte	$58
	.byte	$5B
	.byte	$5E
	.byte	$61
	.byte	$64
	.byte	$67
	.byte	$6A
	.byte	$6D
	.byte	$70
	.byte	$74
	.byte	$77
	.byte	$7A
	.byte	$7D
	.byte	$80
	.byte	$83
	.byte	$86
	.byte	$89
	.byte	$8C
	.byte	$90
	.byte	$93
	.byte	$96
	.byte	$99
	.byte	$9C
	.byte	$9F
	.byte	$A2
	.byte	$A5
	.byte	$A8
	.byte	$AB
	.byte	$AE
	.byte	$B1
	.byte	$B3
	.byte	$B6
	.byte	$B9
	.byte	$BC
	.byte	$BF
	.byte	$C1
	.byte	$C4
	.byte	$C7
	.byte	$C9
	.byte	$CC
	.byte	$CE
	.byte	$D1
	.byte	$D3
	.byte	$D5
	.byte	$D8
	.byte	$DA
	.byte	$DC
	.byte	$DE
	.byte	$E0
	.byte	$E2
	.byte	$E4
	.byte	$E6
	.byte	$E8
	.byte	$EA
	.byte	$EB
	.byte	$ED
	.byte	$EF
	.byte	$F0
	.byte	$F1
	.byte	$F3
	.byte	$F4
	.byte	$F5
	.byte	$F6
	.byte	$F8
	.byte	$F9
	.byte	$FA
	.byte	$FA
	.byte	$FB
	.byte	$FC
	.byte	$FD
	.byte	$FD
	.byte	$FE
	.byte	$FE
	.byte	$FE
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FE
	.byte	$FE
	.byte	$FE
	.byte	$FD
	.byte	$FD
	.byte	$FC
	.byte	$FB
	.byte	$FA
	.byte	$FA
	.byte	$F9
	.byte	$F8
	.byte	$F6
	.byte	$F5
	.byte	$F4
	.byte	$F3
	.byte	$F1
	.byte	$F0
	.byte	$EF
	.byte	$ED
	.byte	$EB
	.byte	$EA
	.byte	$E8
	.byte	$E6
	.byte	$E4
	.byte	$E2
	.byte	$E0
	.byte	$DE
	.byte	$DC
	.byte	$DA
	.byte	$D8
	.byte	$D5
	.byte	$D3
	.byte	$D1
	.byte	$CE
	.byte	$CC
	.byte	$C9
	.byte	$C7
	.byte	$C4
	.byte	$C1
	.byte	$BF
	.byte	$BC
	.byte	$B9
	.byte	$B6
	.byte	$B3
	.byte	$B1
	.byte	$AE
	.byte	$AB
	.byte	$A8
	.byte	$A5
	.byte	$A2
	.byte	$9F
	.byte	$9C
	.byte	$99
	.byte	$96
	.byte	$93
	.byte	$90
	.byte	$8C
	.byte	$89
	.byte	$86
	.byte	$83
L023E:
	.byte	$D0,$52,$45,$53,$53,$20,$41,$4E,$59,$20,$4B,$45,$59,$20,$57,$48
	.byte	$45,$4E,$20,$44,$4F,$4E,$45,$2E,$2E,$2E,$00
L01BD:
	.byte	$CD,$41,$4B,$49,$4E,$47,$20,$43,$48,$41,$52,$53,$45,$54,$2C,$20
	.byte	$4D,$4F,$4D,$50,$4C,$53,$00
L0226:
	.byte	$54,$49,$4D,$45,$20,$20,$3A,$20,$25,$4C,$55,$2E,$25,$55,$53,$00
L0235:
	.byte	$46,$50,$53,$20,$20,$20,$3A,$20,$25,$4C,$55,$2E,$25,$55,$00
L022E:
	.byte	$46,$52,$41,$4D,$45,$53,$3A,$20,$25,$4C,$55,$00

; ---------------------------------------------------------------
; void __near__ doplasma (register __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_doplasma: near

	.dbg	func, "doplasma", "00", static, "_doplasma"
	.dbg	sym, "scrn", "00", register, "regbank", 4
	.dbg	sym, "i", "00", register, "regbank", 3
	.dbg	sym, "ii", "00", register, "regbank", 2

.segment	"BSS"

L010C:
	.res	40,$00
L010E:
	.res	25,$00
L010F:
	.res	1,$00
L0110:
	.res	1,$00
L0111:
	.res	1,$00
L0112:
	.res	1,$00
L0113:
	.res	1,$00
L0114:
	.res	1,$00
L0115:
	.res	1,$00
L0116:
	.res	1,$00

.segment	"CODE"

;
; {
;
	.dbg	line, "plasma.c", 96
	jsr     pushax
	ldy     #$00
	ldx     #$04
	jsr     regswap2
;
; register unsigned char i, ii;
;
	.dbg	line, "plasma.c", 103
	lda     regbank+3
	jsr     pusha
	lda     regbank+2
	jsr     pusha
;
; c1a = c1A;
;
	.dbg	line, "plasma.c", 105
	lda     L0113
	sta     L010F
;
; c1b = c1B;
;
	.dbg	line, "plasma.c", 106
	lda     L0114
	sta     L0110
;
; for (ii = 0; ii < 25; ++ii) {
;
	.dbg	line, "plasma.c", 107
	lda     #$00
	sta     regbank+2
L0245:	lda     regbank+2
	cmp     #$19
	bcs     L0246
;
; ybuf[ii] = (sinustable[c1a] + sinustable[c1b]);
;
	.dbg	line, "plasma.c", 108
	lda     #<(L010E)
	ldx     #>(L010E)
	clc
	adc     regbank+2
	bcc     L0125
	inx
L0125:	sta     sreg
	stx     sreg+1
	ldy     L010F
	lda     _sinustable,y
	sta     ptr1
	ldy     L0110
	lda     _sinustable,y
	clc
	adc     ptr1
	ldy     #$00
	sta     (sreg),y
;
; c1a += 4;
;
	.dbg	line, "plasma.c", 109
	lda     #$04
	clc
	adc     L010F
	sta     L010F
;
; c1b += 9;
;
	.dbg	line, "plasma.c", 110
	lda     #$09
	clc
	adc     L0110
	sta     L0110
;
; for (ii = 0; ii < 25; ++ii) {
;
	.dbg	line, "plasma.c", 107
	inc     regbank+2
	jmp     L0245
;
; c1A += 3;
;
	.dbg	line, "plasma.c", 112
L0246:	lda     #$03
	clc
	adc     L0113
	sta     L0113
;
; c1B -= 5;
;
	.dbg	line, "plasma.c", 113
	lda     L0114
	sec
	sbc     #$05
	sta     L0114
;
; c2a = c2A;
;
	.dbg	line, "plasma.c", 114
	lda     L0115
	sta     L0111
;
; c2b = c2B;
;
	.dbg	line, "plasma.c", 115
	lda     L0116
	sta     L0112
;
; for (i = 0; i < 40; ++i) {
;
	.dbg	line, "plasma.c", 116
	lda     #$00
	sta     regbank+3
L0247:	lda     regbank+3
	cmp     #$28
	bcs     L0248
;
; xbuf[i] = (sinustable[c2a] + sinustable[c2b]);
;
	.dbg	line, "plasma.c", 117
	lda     #<(L010C)
	ldx     #>(L010C)
	clc
	adc     regbank+3
	bcc     L0142
	inx
L0142:	sta     sreg
	stx     sreg+1
	ldy     L0111
	lda     _sinustable,y
	sta     ptr1
	ldy     L0112
	lda     _sinustable,y
	clc
	adc     ptr1
	ldy     #$00
	sta     (sreg),y
;
; c2a += 3;
;
	.dbg	line, "plasma.c", 118
	lda     #$03
	clc
	adc     L0111
	sta     L0111
;
; c2b += 7;
;
	.dbg	line, "plasma.c", 119
	lda     #$07
	clc
	adc     L0112
	sta     L0112
;
; for (i = 0; i < 40; ++i) {
;
	.dbg	line, "plasma.c", 116
	inc     regbank+3
	jmp     L0247
;
; c2A += 2;
;
	.dbg	line, "plasma.c", 121
L0248:	lda     #$02
	clc
	adc     L0115
	sta     L0115
;
; c2B -= 3;
;
	.dbg	line, "plasma.c", 122
	lda     L0116
	sec
	sbc     #$03
	sta     L0116
;
; for (ii = 0; ii < 25; ++ii) {
;
	.dbg	line, "plasma.c", 123
	lda     #$00
	sta     regbank+2
L0249:	lda     regbank+2
	cmp     #$19
	bcs     L0152
;
; for (i = 0; i < 40; ++i, ++scrn) {
;
	.dbg	line, "plasma.c", 128
	lda     #$00
	sta     regbank+3
L0159:	lda     regbank+3
	cmp     #$28
	bcs     L024A
;
; *scrn = (xbuf[i] + ybuf[ii]);
;
	.dbg	line, "plasma.c", 129
	ldy     regbank+3
	lda     L010C,y
	sta     ptr1
	ldy     regbank+2
	lda     L010E,y
	clc
	adc     ptr1
	ldy     #$00
	sta     (regbank+4),y
;
; for (i = 0; i < 40; ++i, ++scrn) {
;
	.dbg	line, "plasma.c", 128
	inc     regbank+3
	inc     regbank+4
	bne     L0159
	inc     regbank+4+1
	jmp     L0159
;
; for (ii = 0; ii < 25; ++ii) {
;
	.dbg	line, "plasma.c", 123
L024A:	inc     regbank+2
	jmp     L0249
;
; }
;
	.dbg	line, "plasma.c", 132
L0152:	ldy     #$00
L016A:	lda     (sp),y
	sta     regbank+2,y
	iny
	cpy     #$04
	bne     L016A
	jmp     incsp4
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ makechar (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_makechar: near

	.dbg	func, "makechar", "00", static, "_makechar"

.segment	"RODATA"

L016D:
	.byte	$01
	.byte	$02
	.byte	$04
	.byte	$08
	.byte	$10
	.byte	$20
	.byte	$40
	.byte	$80

.segment	"BSS"

L0176:
	.res	1,$00
L0177:
	.res	1,$00
L0178:
	.res	1,$00
L0179:
	.res	1,$00
L017A:
	.res	2,$00

.segment	"CODE"

;
; gotoxy (0, 1);
;
	.dbg	line, "plasma.c", 144
	lda     #$00
	jsr     pusha
	lda     #$01
	jsr     _gotoxy
;
; for (c = 0; c < 0x100; ++c) {
;
	.dbg	line, "plasma.c", 145
	lda     #$00
	sta     L017A
	sta     L017A+1
L017E:	ldx     L017A+1
	cpx     #$01
	bcc     L024F
;
; }
;
	.dbg	line, "plasma.c", 160
	rts
;
; s = sinustable[c];
;
	.dbg	line, "plasma.c", 146
L024F:	lda     #<(_sinustable)
	sta     ptr1
	lda     #>(_sinustable)
	clc
	adc     L017A+1
	sta     ptr1+1
	ldy     L017A
	lda     (ptr1),y
	sta     L0179
;
; for (i = 0; i < 8; ++i){
;
	.dbg	line, "plasma.c", 147
	lda     #$00
	sta     L0176
L024C:	lda     L0176
	cmp     #$08
	bcs     L018B
;
; b = 0;
;
	.dbg	line, "plasma.c", 148
	lda     #$00
	sta     L0178
;
; for (ii = 0; ii < 8; ++ii) {
;
	.dbg	line, "plasma.c", 149
	sta     L0177
L024D:	lda     L0177
	cmp     #$08
	bcs     L0195
;
; if ((rand() & 0xFF) > s) {
;
	.dbg	line, "plasma.c", 150
	jsr     _rand
	sec
	sbc     L0179
	bcc     L024E
	beq     L024E
;
; b |= bittab[ii];
;
	.dbg	line, "plasma.c", 151
	ldy     L0177
	lda     L016D,y
	ora     L0178
	sta     L0178
;
; for (ii = 0; ii < 8; ++ii) {
;
	.dbg	line, "plasma.c", 149
L024E:	inc     L0177
	jmp     L024D
;
; ((unsigned char*)CHARSET) [(c*8) + i] = b;
;
	.dbg	line, "plasma.c", 154
L0195:	lda     L017A
	ldx     L017A+1
	stx     tmp1
	asl     a
	rol     tmp1
	asl     a
	rol     tmp1
	asl     a
	rol     tmp1
	ldx     tmp1
	clc
	adc     L0176
	bcc     L024B
	inx
L024B:	sta     ptr1
	txa
	clc
	adc     #$E8
	sta     ptr1+1
	lda     L0178
	ldy     #$00
	sta     (ptr1),y
;
; for (i = 0; i < 8; ++i){
;
	.dbg	line, "plasma.c", 147
	inc     L0176
	jmp     L024C
;
; if ((c & 0x07) == 0) {
;
	.dbg	line, "plasma.c", 156
L018B:	lda     L017A
	and     #$07
	bne     L0180
;
; cputc ('.');
;
	.dbg	line, "plasma.c", 157
	lda     #$2E
	jsr     _cputc
;
; for (c = 0; c < 0x100; ++c) {
;
	.dbg	line, "plasma.c", 145
L0180:	inc     L017A
	jne     L017E
	inc     L017A+1
	jmp     L017E
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

	.dbg	func, "main", "00", extern, "_main"

.segment	"BSS"

L01AF:
	.res	1,$00
L01B0:
	.res	1,$00
L01B1:
	.res	1,$00
L01B2:
	.res	1,$00
L01B3:
	.res	4,$00
L01B4:
	.res	4,$00
L01B6:
	.res	4,$00
L01B7:
	.res	2,$00
L01B8:
	.res	4,$00
L01B9:
	.res	2,$00
L01BA:
	.res	1,$00

.segment	"CODE"

;
; unsigned long f = 0;
;
	.dbg	line, "plasma.c", 171
	lda     #$00
	sta     L01B4
	sta     L01B4+1
	sta     L01B4+2
	sta     L01B4+3
;
; clrscr ();
;
	.dbg	line, "plasma.c", 191
	jsr     _clrscr
;
; cprintf ("Making charset, mompls");
;
	.dbg	line, "plasma.c", 192
	lda     #<(L01BD)
	ldx     #>(L01BD)
	jsr     pushax
	ldy     #$02
	jsr     _cprintf
;
; makechar();
;
	.dbg	line, "plasma.c", 193
	jsr     _makechar
;
; border     = bordercolor (COLOR_BLUE);
;
	.dbg	line, "plasma.c", 196
	lda     #$06
	jsr     _bordercolor
	sta     L01AF
;
; background = bgcolor (COLOR_BLUE);
;
	.dbg	line, "plasma.c", 197
	lda     #$06
	jsr     _bgcolor
	sta     L01B0
;
; text       = textcolor (COLOR_BLACK);
;
	.dbg	line, "plasma.c", 198
	lda     #$00
	jsr     _textcolor
	sta     L01B1
;
; clrscr ();
;
	.dbg	line, "plasma.c", 199
	jsr     _clrscr
;
; block = inb (&CIA2.pra);
;
	.dbg	line, "plasma.c", 203
	lda     $DD00
	sta     L01BA
;
; outb (&CIA2.pra, (block & 0xFC) | ((SCREEN1 >> 14) ^ 0x03));
;
	.dbg	line, "plasma.c", 204
	and     #$FC
	sta     $DD00
;
; v = inb (&VIC.addr);
;
	.dbg	line, "plasma.c", 221
	lda     $D018
	sta     L01B2
;
; t = clock ();
;
	.dbg	line, "plasma.c", 233
	jsr     _clock
	sta     L01B3
	stx     L01B3+1
	ldy     sreg
	sty     L01B3+2
	ldy     sreg+1
	sty     L01B3+3
;
; while (!kbhit()) {
;
	.dbg	line, "plasma.c", 234
	jmp     L01E1
;
; doplasma ((unsigned char*)SCREEN1);
;
	.dbg	line, "plasma.c", 236
L01DF:	ldx     #$E0
	lda     #$00
	jsr     _doplasma
;
; outb (&VIC.addr, PAGE1);
;
	.dbg	line, "plasma.c", 240
	lda     #$8A
	sta     $D018
;
; doplasma ((unsigned char*)SCREEN2);
;
	.dbg	line, "plasma.c", 244
	ldx     #$E4
	lda     #$00
	jsr     _doplasma
;
; outb (&VIC.addr, PAGE2);
;
	.dbg	line, "plasma.c", 248
	lda     #$9A
	sta     $D018
;
; f += 2;
;
	.dbg	line, "plasma.c", 252
	ldy     #<(L01B4)
	sty     ptr1
	ldy     #>(L01B4)
	lda     #$02
	jsr     laddeqa
;
; while (!kbhit()) {
;
	.dbg	line, "plasma.c", 234
L01E1:	jsr     _kbhit
	tax
	beq     L01DF
;
; t = clock() - t;
;
	.dbg	line, "plasma.c", 254
	jsr     _clock
	jsr     pusheax
	lda     L01B3+3
	sta     sreg+1
	lda     L01B3+2
	sta     sreg
	ldx     L01B3+1
	lda     L01B3
	jsr     tossubeax
	sta     L01B3
	stx     L01B3+1
	ldy     sreg
	sty     L01B3+2
	ldy     sreg+1
	sty     L01B3+3
;
; outb (&VIC.addr, v);
;
	.dbg	line, "plasma.c", 261
	lda     L01B2
	sta     $D018
;
; outb (&CIA2.pra, block);
;
	.dbg	line, "plasma.c", 266
	lda     L01BA
	sta     $DD00
;
; (void) cgetc();
;
	.dbg	line, "plasma.c", 275
	jsr     _cgetc
;
; bordercolor (border);
;
	.dbg	line, "plasma.c", 278
	lda     L01AF
	jsr     _bordercolor
;
; bgcolor (background);
;
	.dbg	line, "plasma.c", 279
	lda     L01B0
	jsr     _bgcolor
;
; textcolor (text);
;
	.dbg	line, "plasma.c", 280
	lda     L01B1
	jsr     _textcolor
;
; clrscr ();
;
	.dbg	line, "plasma.c", 281
	jsr     _clrscr
;
; sec   = (t * 10) / CLK_TCK;
;
	.dbg	line, "plasma.c", 284
	lda     L01B3+3
	sta     sreg+1
	lda     L01B3+2
	sta     sreg
	ldx     L01B3+1
	lda     L01B3
	jsr     pusheax
	ldx     #$00
	lda     #$0A
	jsr     tosumul0ax
	jsr     pusheax
	ldx     #$00
	lda     #$3C
	jsr     tosudiv0ax
	sta     L01B6
	stx     L01B6+1
	ldy     sreg
	sty     L01B6+2
	ldy     sreg+1
	sty     L01B6+3
;
; sec10 = sec % 10;
;
	.dbg	line, "plasma.c", 285
	lda     L01B6+3
	sta     sreg+1
	lda     L01B6+2
	sta     sreg
	ldx     L01B6+1
	lda     L01B6
	jsr     pusheax
	ldx     #$00
	lda     #$0A
	jsr     tosumod0ax
	sta     L01B7
	stx     L01B7+1
;
; sec  /= 10;
;
	.dbg	line, "plasma.c", 286
	lda     L01B6+3
	sta     sreg+1
	lda     L01B6+2
	sta     sreg
	ldx     L01B6+1
	lda     L01B6
	jsr     pusheax
	ldx     #$00
	lda     #$0A
	jsr     tosudiv0ax
	sta     L01B6
	stx     L01B6+1
	ldy     sreg
	sty     L01B6+2
	ldy     sreg+1
	sty     L01B6+3
;
; fps   = (f * (CLK_TCK * 10)) / t;
;
	.dbg	line, "plasma.c", 287
	lda     L01B4+3
	sta     sreg+1
	lda     L01B4+2
	sta     sreg
	ldx     L01B4+1
	lda     L01B4
	jsr     pusheax
	ldx     #$02
	lda     #$58
	jsr     tosumul0ax
	jsr     pusheax
	lda     L01B3+3
	sta     sreg+1
	lda     L01B3+2
	sta     sreg
	ldx     L01B3+1
	lda     L01B3
	jsr     tosudiveax
	sta     L01B8
	stx     L01B8+1
	ldy     sreg
	sty     L01B8+2
	ldy     sreg+1
	sty     L01B8+3
;
; fps10 = fps % 10;
;
	.dbg	line, "plasma.c", 288
	lda     L01B8+3
	sta     sreg+1
	lda     L01B8+2
	sta     sreg
	ldx     L01B8+1
	lda     L01B8
	jsr     pusheax
	ldx     #$00
	lda     #$0A
	jsr     tosumod0ax
	sta     L01B9
	stx     L01B9+1
;
; fps  /= 10;
;
	.dbg	line, "plasma.c", 289
	lda     L01B8+3
	sta     sreg+1
	lda     L01B8+2
	sta     sreg
	ldx     L01B8+1
	lda     L01B8
	jsr     pusheax
	ldx     #$00
	lda     #$0A
	jsr     tosudiv0ax
	sta     L01B8
	stx     L01B8+1
	ldy     sreg
	sty     L01B8+2
	ldy     sreg+1
	sty     L01B8+3
;
; gotoxy (0, 0); cprintf ("time  : %lu.%us", sec, sec10);
;
	.dbg	line, "plasma.c", 292
	lda     #$00
	jsr     pusha
	jsr     _gotoxy
	lda     #<(L0226)
	ldx     #>(L0226)
	jsr     pushax
	lda     L01B6+3
	sta     sreg+1
	lda     L01B6+2
	sta     sreg
	ldx     L01B6+1
	lda     L01B6
	jsr     pusheax
	lda     L01B7
	ldx     L01B7+1
	jsr     pushax
	ldy     #$08
	jsr     _cprintf
;
; gotoxy (0, 1); cprintf ("frames: %lu", f);
;
	.dbg	line, "plasma.c", 293
	lda     #$00
	jsr     pusha
	lda     #$01
	jsr     _gotoxy
	lda     #<(L022E)
	ldx     #>(L022E)
	jsr     pushax
	lda     L01B4+3
	sta     sreg+1
	lda     L01B4+2
	sta     sreg
	ldx     L01B4+1
	lda     L01B4
	jsr     pusheax
	ldy     #$06
	jsr     _cprintf
;
; gotoxy (0, 2); cprintf ("fps   : %lu.%u", fps, fps10);
;
	.dbg	line, "plasma.c", 294
	lda     #$00
	jsr     pusha
	lda     #$02
	jsr     _gotoxy
	lda     #<(L0235)
	ldx     #>(L0235)
	jsr     pushax
	lda     L01B8+3
	sta     sreg+1
	lda     L01B8+2
	sta     sreg
	ldx     L01B8+1
	lda     L01B8
	jsr     pusheax
	lda     L01B9
	ldx     L01B9+1
	jsr     pushax
	ldy     #$08
	jsr     _cprintf
;
; if (doesclrscrafterexit ()) {
;
	.dbg	line, "plasma.c", 296
	jsr     _doesclrscrafterexit
	tax
	beq     L0251
;
; cputsxy (0, 4, "Press any key when done...");
;
	.dbg	line, "plasma.c", 297
	jsr     decsp2
	lda     #$00
	ldy     #$01
	sta     (sp),y
	lda     #$04
	dey
	sta     (sp),y
	lda     #<(L023E)
	ldx     #>(L023E)
	jsr     _cputsxy
;
; (void) cgetc ();
;
	.dbg	line, "plasma.c", 298
	jsr     _cgetc
;
; return EXIT_SUCCESS;
;
	.dbg	line, "plasma.c", 302
	ldx     #$00
	txa
;
; }
;
	.dbg	line, "plasma.c", 303
L0251:	rts
	.dbg	line

.endproc

