FEATURES {
    STARTADDRESS: default = $0E00;
}
SYMBOLS {
    __LOADADDR__:  type = import;
    __STACKSIZE__: type = weak, value = $0800; # 2k stack
    __RAMEND__:    type = weak, value = $7C00;
}
MEMORY {
    ZP:       file = "", define = yes, start = $0070,           size = $0020;
    LOADADDR: file = "%O.inf",         start = %S - 14,         size = $000e;
    MAIN:     file = %O, define = yes, start = %S,              size = __RAMEND__ - %S;
    BSS:      file = "",               start = __ONCE_RUN__,    size = __RAMEND__ - __STACKSIZE__ - __ONCE_RUN__;

}
SEGMENTS {
    ZEROPAGE: load = ZP,       type = zp;
    STARTUP:  load = MAIN,     type = ro;
    INIT:     load = MAIN,     type = rw;
    LOWCODE:  load = MAIN,     type = ro,  optional = yes;
    CODE:     load = MAIN,     type = ro;
    RODATA:   load = MAIN,     type = ro;
    DATA:     load = MAIN,     type = rw;
    ONCE:     load = MAIN,     type = ro,  define = yes;
    BSS:      load = BSS,      type = bss, define = yes;
    LOADADDR: load = LOADADDR, type = ro,  define = yes;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
