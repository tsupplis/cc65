SYMBOLS {
    __STACKSIZE__: type = weak, value = $0800; # 2k stack
    __RAM_TOP__: type = weak, value = $7FFF;
}

MEMORY {
    ZP:     file = "", start = $0020, size = $00C0, define = yes;
    HEADER: file = "", start = $0000, size = $0004;
    MAIN:   file = %O, start = $0280, size = $7D80 - __STACKSIZE__, define = yes;
}

SEGMENTS {
    ZEROPAGE: load = ZP,     type = zp;
    EXEHDR:   load = HEADER, type = ro;
    STARTUP:  load = MAIN,   type = ro, define = yes;
    ONCE:     load = MAIN,   type = ro, optional = yes;
    CODE:     load = MAIN,   type = ro;
    RODATA:   load = MAIN,   type = ro;
    DATA:     load = MAIN,   type = rw;
    INIT:     load = MAIN,   type = rw;
    BSS:      load = MAIN,  type = bss, define   = yes;
}

FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}


